// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String

  @@map("users")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  tests Tests[]

  @@map("categories")
}

model Term {
  id Int @id @default(autoincrement())
  number Int @unique
  disciplines Disciplines[]

  @@map("terms")
}

model Disciplines {
  id Int @id @default(autoincrement())
  name String @unique
  term Term @relation(fields: [termId], references: [id])
  termId Int
  teacherDisciplines teacherDisciplines[]
  tests Tests[]

  @@map("disciplines")
}

model Teacher {
  id Int @id @default(autoincrement())
  name String
  teacherDisciplines teacherDisciplines[]
  tests Tests[]


  @@map("teachers")
}

model teacherDisciplines {
  id Int @id @default(autoincrement())
  teacher Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int
  disciplines Disciplines @relation(fields: [disciplinesId], references: [id])
  disciplinesId Int
  tests Tests[]

  @@map("teachersDisciplines")
}

model Tests {
  id Int @id @default(autoincrement())
  name String
  pdfUrl String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  teacherDisciplines teacherDisciplines @relation(fields: [teacherDisciplinesId], references: [id])
  teacherDisciplinesId Int
  teacher Teacher @relation(fields: [teacherId], references: [id])
  teacherId Int
  disciplines Disciplines @relation(fields: [disciplinesId], references: [id])
  disciplinesId Int 

  @@map("tests")
}